#?delimiters [%, %], [%=, %]
<wr:LayoutParameter label="Show Header" name="show-header" type="boolean" default="true">
Defines the rendition of the header on the top.
Allowed values are: true (default) or false.
</wr:LayoutParameter>
<wr:LayoutParameter label="Show Attributes Name" name="show-attribute-name" type="boolean" default="false">
Defines the rendition of the attributes names.
Allowed values are: true or false(default).
</wr:LayoutParameter>
<wr:LayoutParameter label="Show Bullet" name="show-bullet" type="boolean" default="flase">
Defines the rendition of a bullet next to each line.
Allowed values are: true or false(default).
</wr:LayoutParameter>
<wr:LayoutParameter label="Use Alternate Rows" name="use-alternate" type="boolean" default="true">
Defines the usage of alternates colours for each line.
Allowed values are: true or false(default).
</wr:LayoutParameter>
<wr:LayoutParameter label="Links Position" name="link-position" type="enum" values="left|right|on_bullet|on_row" default="on_row">
Defines the rendition of the sub levels links.
Allowed values are:
- right (default): places the links on the right
- left: places the links on the left
- on_bullet: places the first link on the bullet
- on_row: places the first link on the attributes
</wr:LayoutParameter>
<wr:LayoutParameter label="Links Menu" name="link-menu" type="boolean" default="true">
Defines the rendition of the links.
Allowed values are:
- false: places all the links in the table
- true (default): places the links in a dropdown menu for each row
</wr:LayoutParameter>
<wr:LayoutParameter label="Scrolling Position" name="scrolling-position" type="enum" values="top|bottom|both" default="bottom">
Defines where to position the scroll links.
Allowed values are:
- top (default): places the links at the top
- bottom: places the links at the bottom
- both: places the links at the top and bottom
</wr:LayoutParameter>
<wr:LayoutParameter label="Buttons Position" name="button-position" type="enum" values="top|bottom|both" default="bottom">
Defines where to position the buttons to render submit links.
Allowed values are:
- top: places the buttons at the top
- bottom (default): places the buttons at the bottom
- both: places the buttons at the top and bottom
</wr:LayoutParameter>
<wr:LayoutParameter label="Show Jump Links" name="show-jump-links" type="boolean" default="false">
Defines whether to show the jumps links of the scroller or not.
Allowed values are: true(default) or false.
</wr:LayoutParameter>
<wr:LayoutParameter label="Use Empty Unit Message" name="use-empty-unit-message" type="boolean" default="true">
Defines the usage of a message for empty units.
Allowed values are: true(default) or false.
</wr:LayoutParameter>
<wr:LayoutParameter label="Empty Unit Message" name="empty-unit-message" type="string" default="No results">
Defines the key of the message to use if the unit is empty.
Default value: emptyUnitMessage
</wr:LayoutParameter>
<wr:LayoutParameter label="Empty Description Message" name="empty-descr-message" type="string" default="No content available">
Defines the key of the message to use if the description is empty.
Default value: No content available
</wr:LayoutParameter>
[%
import org.apache.commons.lang.StringUtils
import org.apache.commons.lang.math.NumberUtils

setHTMLOutput()

def unitId = unit["id"]
def blockFactor = unit["blockFactor"]
def isSortable = unit["sortable"]
def isScrollable = blockFactor != "" ? "true": "false"

def links = unit.selectNodes("layout:Link").findAll{it["_exp"]!='t'}
def unitLink = links.empty ? null : links[0]
def unitLinkIsAjax = unitLink != null ? (unitLink["ajaxEnabled"] == "true" && isAjaxPage(page)) : false
def link = unitLink?.valueOf("@link")

def showHeader = params["show-header"]
def showAttributeName = params["show-attribute-name"]
def useAlternate = params["use-alternate"]
def showBullet = params["show-bullet"]
def linkPosition = params["link-position"]
def buttonPosition = params["button-position"]
def showJumpLinks = params["show-jump-links"]
def scrollingPosition = params["scrolling-position"]
def useEmptyUnitMessage = params["use-empty-unit-message"]
def emptyUnitMessage = params["empty-unit-message"]
def emptyDescrMessage = params["empty-descr-message"]

def linkMenu = Boolean.parseBoolean(params["link-menu"])

def firstLink = unit.selectSingleNode("layout:Link[contains(@link,'First')]")
def previousLink = unit.selectSingleNode("layout:Link[contains(@link,'Previous')]")
def blockLink = unit.selectSingleNode("layout:Link[contains(@link,'Block')]")
def nextLink = unit.selectSingleNode("layout:Link[contains(@link,'Next')]")
def lastLink = unit.selectSingleNode("layout:Link[contains(@link,'Last')]")
def isAutoExpandAjax = isAjaxPage(page)
def checkable = "true" == unit["checkable"] && "true" != unit["distinct"]

def colspan = unit.selectNodes("layout:Attribute[position()<last()]").size()
def description = unit.selectSingleNode("layout:Attribute[last()]")


//returns true if the given link must be rendered as a form button
def isButton(link){
  def navLink = getById(link["link"])
  if(navLink == null){
    return false
  }
  def linkParams = navLink.selectNodes("LinkParameter").collect{it["source"]}
  if(linkParams.isEmpty()){
    linkParams = getAutomaticLinkParameters(navLink).collect{it["source"]}
  }
  for(param in linkParams){
    if(param?.endsWith("Checked")){
      return true;
    }
  }
  return false
}

def buttonsCount = unit.selectNodes("layout:Link").findAll{ isButton(it) }.size();
%]

[% 
def getIconPath(linkLayout) {
	folder = linkLayout.parameters["icon-folder"]
	name = StringUtils.defaultIfEmpty(linkLayout.parameters["icon-name"], linkLayout.contextElement?.attributeValue("name"))
	extension = linkLayout.parameters["icon-extension"]
	return getFilePath(folder, name, extension)
}
%]

[% if (useEmptyUnitMessage != "true") { %]
<c:if test="${not(empty <wr:UnitId/>) and (<wr:UnitId/>.dataSize gt 0)}">
[% } else { %]
<c:choose>
<c:when test="${not(empty <wr:UnitId/>) and (<wr:UnitId/>.dataSize gt 0)}">
[% } %]
	<wr:Frame>
		<div class=" <wr:StyleClass/>">
			<div class=" PowerIndexUnit">
				[% if (checkable) { %]
					<table>
						<tr>
							<td colspan="[%= buttonsCount ?: 1 %]" class="error"><html:errors property="<wr:UnitId/>Checked" /></td>
						</tr>
						[% if (buttonPosition == "top" || buttonPosition == "both") { %]
							<tr>
								<wr:Iterate var="l" context="unit" select="layout:Link">
									[% if (isButton(l)) { %]
										<wr:Visible>
											<td><wr:Link class="button" type="button" context="l"/></td>
										</wr:Visible>	
									[% } %]
								</wr:Iterate>
							</tr>
						[% } %]
					</table>
				[% } %]
				[% if (isScrollable == "true" && (scrollingPosition == "bottom" || scrollingPosition == "both")) { %]
					<c:if test="${<wr:UnitId/>.scroller.of gt [%= blockFactor %]}">
						<table class="scrolling" border="0" cellspacing="0" cellpadding="0">
						   <tr> 
								[% if (firstLink) { %]
									<td class="scrollText">
								        <c:choose>
								            <c:when test="${<wr:UnitId/>.scroller.current ne <wr:UnitId/>.scroller.first}">
							     	            <wr:Link class="scroll" context="firstLink"/>
								            </c:when>
								            <c:otherwise>
								            	[% def firstLinkLayout = getLinkLayout(firstLink)
								            	if (firstLinkLayout.parameters["show"] && (firstLinkLayout.parameters["show"] == "icon" || firstLinkLayout.parameters["show"] == "icon & text")) { %]
								            		<table cellspacing="0" cellpadding="0">
														<tr>
															<td valign="middle">
																<img src="[%=getIconPath(firstLinkLayout) %]" border="0"/>
															</td>
															[% if (firstLinkLayout.parameters["show"] == "icon & text") { %]
															<td><bean:message key="PowerIndex.First"/></td>
															[% } %]
														</tr>
													</table>
								            	[% } else { %]
								           			<span><bean:message key="PowerIndex.First"/></span>
								           		[% } %]
								           		</c:otherwise>
								        </c:choose>
								    </td>
							    [% } %]
							    [% if (previousLink) { %]
								    <td class="scrollText">
								        <c:choose>
							                <c:when test="${<wr:UnitId/>.scroller.current ne <wr:UnitId/>.scroller.previous}">
								    	        <wr:Link class="scroll" context="previousLink"/>
							                </c:when>
							                <c:otherwise>
							                [% def previousLinkLayout = getLinkLayout(previousLink)
								            	if (previousLinkLayout.parameters["show"] && (previousLinkLayout.parameters["show"] == "icon" || previousLinkLayout.parameters["show"] == "icon & text")) { %]
								            		<table cellspacing="0" cellpadding="0">
														<tr>
															<td valign="middle">
																<img src="[%=getIconPath(previousLinkLayout) %]" border="0"/>
															</td>
															[% if (previousLinkLayout.parameters["show"] == "icon & text") { %]
															<td><bean:message key="PowerIndex.Previous"/></td>
															[% } %]
														</tr>
													</table>
								            	[% } else { %]
								           			<span><bean:message key="PowerIndex.Previous"/></span>
								           		[% } %]
								           	</c:otherwise>
							            </c:choose>
								    </td>
							    [% } %]
							    [% if (blockLink) { %]
							    <td class="scrollText" nowrap>${<wr:UnitId/>.scroller.from} <bean:message key="PowerIndex.To"/> ${<wr:UnitId/>.scroller.to} <bean:message key="PowerIndex.Of"/> ${<wr:UnitId/>.scroller.of}</td>
							    [% } %]
							    [% if (nextLink) { %]
								    <td class="scrollText">
								        <c:choose>
							                <c:when test="${<wr:UnitId/>.scroller.current ne <wr:UnitId/>.scroller.next}">
					    			    	    <wr:Link class="scroll" context="nextLink"/>
					    		            </c:when>
						    	            <c:otherwise>
						    	            	[% def nextLinkLayout = getLinkLayout(nextLink)
								            	if (nextLinkLayout.parameters["show"] && (nextLinkLayout.parameters["show"] == "icon" || nextLinkLayout.parameters["show"] == "icon & text")) { %]
								            		<table cellspacing="0" cellpadding="0">
														<tr>
															<td valign="middle">
																<img src="[%=getIconPath(nextLinkLayout) %]" border="0"/>
															</td>
															[% if (nextLinkLayout.parameters["show"] == "icon & text") { %]
															<td><bean:message key="PowerIndex.Next"/></td>
															[% } %]
														</tr>
													</table>
								            	[% } else { %]
								           			<span><bean:message key="PowerIndex.Next"/></span>
								           		[% } %]
						    	            </c:otherwise>
						    	        </c:choose>
								    </td>
							    [% } %]
							    [% if (lastLink) { %]
								    <td class="scrollText">
								    	<c:choose>
					    		            <c:when test="${<wr:UnitId/>.scroller.current ne <wr:UnitId/>.scroller.last}">
						    		    	    <wr:Link class="scroll" context="lastLink"/>
							                </c:when>
							                <c:otherwise>
							                	[% def lastLinkLayout = getLinkLayout(lastLink)
								            	if (lastLinkLayout.parameters["show"] && (lastLinkLayout.parameters["show"] == "icon" || lastLinkLayout.parameters["show"] == "icon & text")) { %]
								            		<table cellspacing="0" cellpadding="0">
														<tr>
															<td valign="middle">
																<img src="[%=getIconPath(lastLinkLayout) %]" border="0"/>
															</td>
															[% if (lastLinkLayout.parameters["show"] == "icon & text") { %]
															<td><bean:message key="PowerIndex.Last"/></td>
															[% } %]
														</tr>
													</table>
								            	[% } else { %]
								           			<span><bean:message key="PowerIndex.Last"/></span>
								           		[% } %] 
							               </c:otherwise>
							            </c:choose>
								    </td>
							    [% } %]
						   </tr>
						   [% if (showJumpLinks == "true") {%]
							   <tr>  
								    <td colspan="5" class="scrollText"> 
									    <span><bean:message key="PowerIndex.Jump"/></span>
									    <c:forEach var="current" varStatus="status" items="${<wr:UnitId/>.scroller.blocks}">
									      <c:set var="index" value="${status.index}"/>
									      <span class="jump">
									      <c:choose>
									        <c:when test="${current ne <wr:UnitId/>.scroller.current}">
									          <a class="<wr:StyleClass context="blockLink"/> link" href="<wr:URL context="blockLink"/>"  onclick="<wr:AjaxURL context="blockLink" />">${current}</a>
									        </c:when>
									        <c:otherwise>
									          ${current}
									        </c:otherwise>
									      </c:choose>
									      </span>
								    	</c:forEach> 
								    </td>
							   </tr>
						    [% } %]
						 </table>
					</c:if>
				[% } %]
				
				<table class="maintable" border="0" cellspacing="0" cellpadding="0">
					[% if (showHeader == "true") {%]
						<!-- begin header -->
						<thead>
						<tr class="headerRow">
						[% if (showBullet == "true") {%]
							<th class="<wr:StyleClass/> header"></th>
						[% } %]
						[% if (checkable) {%]
						    <th class="<wr:StyleClass/> header"></th>
						[%}%]
						[% if (linkPosition == "left") { %]
							[% if (linkMenu && !links.empty) { %]
						    	<th class="<wr:StyleClass/> header"></th>
						    [% } else { %]
							<wr:Iterate var="l" context="unit" select="layout:Link[string(@_exp) != 't']">
								[% if (!isButton(l)) { %]
									<wr:Visible><th class="<wr:StyleClass/> header"></th></wr:Visible>
								[% } %]
							</wr:Iterate>
							[% } %]
						[% }  %]
						<wr:Iterate var="att" context="unit" select="layout:Attribute[position()<last()]">
							<wr:Visible>
       					    [% if (showAttributeName == "true") {%]
							  <th></th>
							[% } %]
					        <th nowrap="nowrap" class="<wr:StyleClass/> header">
					        [% if (isSortable == "true") { %]
					         [% def sortLink = unit.selectSingleNode("layout:Link[@link='" + unit["id"] + att["attribute"] + "']")
						         if(sortLink != null) { %]
						            <wr:Link context="sortLink" class="sort" type="sort"/>
						         [% } else { %]
						            <wr:Label/>
						         [% } %]
						     [% } else { %]
						     	<wr:Label/>
						     [% } %]
					        </th>
	                        </wr:Visible>
					    </wr:Iterate>
					    [% if (linkPosition != "left" && linkMenu && !links.empty) { %]
					    	<th class="<wr:StyleClass/> header"></th>
					    [% } else { %]
						<wr:Iterate var="l" context="unit" select="layout:Link[string(@_exp) != 't']">
							[% if (!isButton(l) && (linkPosition == "right" || ((linkPosition == "on_row" || linkPosition == "on_bullet") && index > 0))) { %]
								<wr:Visible><th class="<wr:StyleClass/> header"></th></wr:Visible>
							[% } %]
						</wr:Iterate>
						[% } %]	
						</tr>
						</thead>
						<!-- end header -->
					[% } %]
				<!-- instances -->
				<tbody>
				[% 
				   def templateDir = getUnitLayoutFile(unit).parentFile
				   def templatePath = templateDir.absolutePath + "/printForEach.Helper.template"
				   def templateParams= params
				 %]
				<wr:PrintTemplate var="templateParams" template="templatePath"/>
					</tbody>
				</table>
				[% if (isScrollable == "true" && (scrollingPosition == "bottom" || scrollingPosition == "both")) { %]
					<c:if test="${<wr:UnitId/>.scroller.of gt [%= blockFactor %]}">
						<table class="scrolling" border="0" cellspacing="0" cellpadding="0">
						   <tr> 
								[% if (firstLink) { %]
								    <td class="scrollText">
								        <c:choose>
								            <c:when test="${<wr:UnitId/>.scroller.current ne <wr:UnitId/>.scroller.first}">
							     	            <wr:Link class="scroll" context="firstLink"/>
								            </c:when>
								            <c:otherwise>
								            	[% def firstLinkLayout = getLinkLayout(firstLink)
								            	   if (firstLinkLayout.parameters["show"] && (firstLinkLayout.parameters["show"] == "icon" || firstLinkLayout.parameters["show"] == "icon & text")) { %]
								            		<table cellspacing="0" cellpadding="0">
														<tr>
															<td valign="middle">
																<img src="[%=getIconPath(firstLinkLayout) %]" border="0"/>
															</td>
															[% if (firstLinkLayout.parameters["show"] == "icon & text") { %]
															<td><bean:message key="PowerIndex.First"/></td>
															[% } %]
														</tr>
													</table>
								            	[% } else { %]
								           			<span><bean:message key="PowerIndex.First"/></span>
								           		[% } %]
								           		</c:otherwise>
								        </c:choose>
								    </td>
							    [% } %]
							    [% if (previousLink) { %]
								    <td class="scrollText">
								        <c:choose>
							                <c:when test="${<wr:UnitId/>.scroller.current ne <wr:UnitId/>.scroller.previous}">
								    	        <wr:Link class="scroll" context="previousLink"/>
							                </c:when>
							                <c:otherwise>
							                [% def previousLinkLayout = getLinkLayout(previousLink)
								            	if (previousLinkLayout.parameters["show"] && (previousLinkLayout.parameters["show"] == "icon" || previousLinkLayout.parameters["show"] == "icon & text")) { %]
								            		<table cellspacing="0" cellpadding="0">
														<tr>
															<td valign="middle">
																<img src="[%=getIconPath(previousLinkLayout) %]" border="0"/>
															</td>
															[% if (previousLinkLayout.parameters["show"] == "icon & text") { %]
															<td><bean:message key="PowerIndex.Previous"/></td>
															[% } %]
														</tr>
													</table>
								            	[% } else { %]
								           			<span><bean:message key="PowerIndex.Previous"/></span>
								           		[% } %]
								           	</c:otherwise>
							            </c:choose>
								    </td>
							    [% } %]
							    [% if (blockLink) { %]
							    <td class="scrollText" nowrap>${<wr:UnitId/>.scroller.from} <bean:message key="PowerIndex.To"/> ${<wr:UnitId/>.scroller.to} <bean:message key="PowerIndex.Of"/> ${<wr:UnitId/>.scroller.of}</td>
							    [% } %]
							    [% if (nextLink) { %]
								    <td class="scrollText">
								        <c:choose>
							                <c:when test="${<wr:UnitId/>.scroller.current ne <wr:UnitId/>.scroller.next}">
					    			    	    <wr:Link class="scroll" context="nextLink"/>
					    		            </c:when>
						    	            <c:otherwise>
						    	            	[% def nextLinkLayout = getLinkLayout(nextLink)
								            	if (nextLinkLayout.parameters["show"] && (nextLinkLayout.parameters["show"] == "icon" || nextLinkLayout.parameters["show"] == "icon & text")) { %]
								            		<table cellspacing="0" cellpadding="0">
														<tr>
															<td valign="middle">
																<img src="[%=getIconPath(nextLinkLayout) %]" border="0"/>
															</td>
															[% if (nextLinkLayout.parameters["show"] == "icon & text") { %]
															<td><bean:message key="PowerIndex.Next"/></td>
															[% } %]
														</tr>
													</table>
								            	[% } else { %]
								           			<span><bean:message key="PowerIndex.Next"/></span>
								           		[% } %]
						    	            </c:otherwise>
						    	        </c:choose>
								    </td>
							    [% } %]
							    [% if (lastLink) { %]
								    <td class="scrollText">
								    	<c:choose>
					    		            <c:when test="${<wr:UnitId/>.scroller.current ne <wr:UnitId/>.scroller.last}">
						    		    	    <wr:Link class="scroll" context="lastLink"/>
							                </c:when>
							                <c:otherwise>
							                	[% def lastLinkLayout = getLinkLayout(lastLink)
								            	if (lastLinkLayout.parameters["show"] && (lastLinkLayout.parameters["show"] == "icon" || lastLinkLayout.parameters["show"] == "icon & text")) { %]
								            		<table cellspacing="0" cellpadding="0">
														<tr>
															<td valign="middle">
																<img src="[%=getIconPath(lastLinkLayout) %]" border="0"/>
															</td>
															[% if (lastLinkLayout.parameters["show"] == "icon & text") { %]
															<td><bean:message key="PowerIndex.Last"/></td>
															[% } %]
														</tr>
													</table>
								            	[% } else { %]
								           			<span><bean:message key="PowerIndex.Last"/></span>
								           		[% } %] 
							               </c:otherwise>
							            </c:choose>
								    </td>
							    [% } %]
						   </tr>
						   [% if (showJumpLinks == "true") {%]
							   <tr>  
								    <td colspan="5" class="scrollText"> 
									    <span><bean:message key="PowerIndex.Jump"/></span>
									    <c:forEach var="current" varStatus="status" items="${<wr:UnitId/>.scroller.blocks}">
									      <c:set var="index" value="${status.index}"/>
									      <span class="jump">
									      <c:choose>
									        <c:when test="${current ne <wr:UnitId/>.scroller.current}">
									          <a class="<wr:StyleClass context="blockLink"/> link" href="<wr:URL context="blockLink"/>"  onclick="<wr:AjaxURL context="blockLink" />">${current}</a>
									        </c:when>
									        <c:otherwise>
									          ${current}
									        </c:otherwise>
									      </c:choose>
									      </span>
								    	</c:forEach> 
								    </td>
							   </tr>
						    [% } %]
						 </table>
					</c:if>
				[% } %]
				[% if (checkable && (buttonPosition == "bottom" || buttonPosition == "both")) { %]
					<table>
						<tr>
							<wr:Iterate var="l" context="unit" select="layout:Link">
								[% if (isButton(l)) { %]
									<wr:Visible>
										<td><wr:Link class="button" type="button" context="l"/></td>
									</wr:Visible>	
								[% } %]
							</wr:Iterate>
						</tr>
					</table>
				[% } %]
			</div>
		</div>
	</wr:Frame>
[% if (useEmptyUnitMessage != "true") { %]
</c:if>
[% } else { %]
</c:when>
<c:otherwise>
	<wr:Frame>
		<div class=" <wr:StyleClass/>">
			<div class=" PowerIndexUnit">
				<bean:message key="[%printJSPTagValue(emptyUnitMessage)%]"/>
			</div>
		</div>
	</wr:Frame>
</c:otherwise>
</c:choose>
[% } %]